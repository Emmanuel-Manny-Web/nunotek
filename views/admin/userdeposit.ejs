<html lang="en">
    <%- include('../partials/admin/head') %>
<body data-new-gr-c-s-check-loaded="14.1117.0" data-gr-ext-installed="" class="">
<div class="preloader" style="display: none;">
  <div class="lds-ripple">
      <div class="lds-pos"></div>
      <div class="lds-pos"></div>
  </div>
</div>

<div id="main-wrapper" data-theme="light" data-layout="vertical" data-navbarbg="skin6" data-sidebartype="mini-sidebar" data-sidebar-position="fixed" data-header-position="fixed" data-boxed-layout="full" class="mini-sidebar">

  
<%- include('../partials/admin/header') %>

<%- include('../partials/admin/sidebar') %>

  <div class="page-wrapper" style="display: block;">
      <div class="page-breadcrumb">
          <div class="row">
              <div class="col-7 align-self-center">
                  <h4 class="page-title text-truncate text-dark font-weight-medium mb-1">    Payment Pending</h4>

                  <div class="d-flex align-items-center">
                      <nav aria-label="breadcrumb">
                          <ol class="breadcrumb m-0 p-0">
                              <li class="breadcrumb-item text-muted active" aria-current="page">Dashboard</li>
                              <li class="breadcrumb-item text-muted" aria-current="page">    Payment Pending</li>
                          </ol>
                      </nav>
                  </div>

              </div>

          </div>
      </div>



  <div class="card card-primary m-0 m-md-4 my-4 m-md-0 shadow">
      <div class="card-body">

          <div class="table-responsive">
              <table class="categories-show-table table table-hover table-striped table-bordered">
								<thead class="thead-dark">
                  <tr>
										<th scope="col">Date</th>
										<th scope="col">Narration</th>
										<th scope="col">Name</th>
										<th scope="col">Method</th>
										<th scope="col">Amount</th>
										<th scope="col">Status</th>
										<th scope="col">Action</th>
									</tr>
								</thead>
								<tbody>
									<% deposits.forEach((deposit) => { %>
										<tr>
											<td data-label="Date"> <%= deposit.createdAt.toString().slice(0, 21) %></td>
											<td data-label="Trx Number" class="font-weight-bold text-uppercase"><%= deposit.narration.toUpperCase() %></td>
											<td data-label="Name">
													<a href="javascript:void(0)" target="_blank">
															<div class="d-flex no-block align-items-center">
																<div class="mr-3"><img src="/admin/images/default.png" alt="user" class="rounded-circle" width="45" height="45">
																</div>
																<div class="">
																	<h5 class="text-dark mb-0 font-16 font-weight-medium">
																		<%= deposit.sender %>
																	</h5>
																	<span class="text-muted font-14"><%= deposit.email %></span>
																</div>
															</div>
													</a>
											</td>
											<td data-label="Method">Bank Transfer</td>
											<td data-label="Amount" class="font-weight-bold">₦ <%= Number(deposit.amount).toLocaleString() %></td>
											<td data-label="Status">
												<span class="badge badge-warning"><%= deposit.status %></span>
											</td>
											<td data-label="Action">
												<button class="edit_button btn btn-primary text-white btn-sm" data-toggle="modal" data-target="#myModal" data-title="Edit" data-id="8060" data-feedback="" data-amount="<%= deposit.amount %>" data-sender="<%= deposit.sender %>" data-narration="<%= deposit.narration %>" data-email="<%= deposit.email %>">
													<i class="fa fa-pencil-alt"></i>
												</button>
											</td>
										</tr>
									<% }) %>
								</tbody>
              </table>
          </div>
      </div>
  </div>

  <!-- Modal for Edit button -->
  <div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="exampleModalLabel" style="display: none;" aria-hidden="true">
      <div class="modal-dialog">
          <div class="modal-content ">
              <div class="modal-header modal-colored-header bg-primary">
                  <h4 class="modal-title" id="myModalLabel">Deposit Information</h4>
                  <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
              </div>

              <form method="" class="actionRoute" action="">
                  <div class="modal-body">
                      <ul class="list-group withdraw-detail">
												<li class="list-group-item mb-2">
													<span class="font-weight-bold ">
													Email </span> : <span class="font-weight-bold ml-3" id="email"></span> 
                        </li>
                        <li class="list-group-item mb-2">
													<span class="font-weight-bold ">
													Sender Name </span> : <span class="font-weight-bold ml-3" id="sender"></span> 
                        </li>
                        <li class="list-group-item mb-2">
													<span class="font-weight-bold ">
													Narration </span>
													: <span class="font-weight-bold ml-3" id="narration"></span> 
												</li>
												<li class="list-group-item mb-2">
													<span class="font-weight-bold ">Amount </span> 
													: <span class="font-weight-bold ml-3" id="amount"></span>
												</li>
											</ul>

                  </div>
                  <div class="modal-footer">
										<button type="button" class="btn btn-secondary" data-dismiss="modal" id="close">Close</button>
										<button type="submit" class="btn btn-primary" id="approve">Approve</button>
										<button type="submit" class="btn btn-danger" id="reject">Reject</button>
										<button type="submit" class="btn btn-warning" id="ban">Ban</button>
									</div>
              </form>
          </div>
      </div>
  	</div>
  </div>
</div>



<%- include('../partials/admin/scripts') %>

<script>
	function notify(status,message) {
		iziToast[status]({
			message: message,
			position: "topRight"
		});
	}

	const actions = document.querySelectorAll(".edit_button")
	actions.forEach((action) => {
		action.addEventListener("click", () => {
			const amount = action.getAttribute("data-amount")
			const email = action.getAttribute("data-email")
			const narration = action.getAttribute("data-narration")
			const sender = action.getAttribute("data-sender")

			document.querySelector("#email").innerHTML = email
			document.querySelector("#amount").innerHTML = amount
			document.querySelector("#narration").innerHTML = narration
			document.querySelector("#sender").innerHTML = sender
		})
	})

	const closeBtn = document.querySelector("#close")
	const approve = document.querySelector("#approve")
	approve.addEventListener("click", async (event) => {
		event.preventDefault()
		const email = document.querySelector("#email").innerHTML
		const amount = document.querySelector("#amount").innerHTML
		const narration = document.querySelector("#narration").innerHTML
		const sender = document.querySelector("#sender").innerHTML

		const res = await fetch('/admin-panel/approve-deposit', {
			method: "post",
			body: JSON.stringify({ email, amount, narration, sender }),
			headers: { 'Content-Type': 'application/json' }
		})
		const data = await res.json()
		if(data.ok) {
			notify("success", `${data.message}`)
			closeBtn.click()
			setTimeout(() => {
				location.reload()
			}, 5000)
		} else {
			notify("error", `${data.error}`)
		}
	})
	const reject = document.querySelector("#reject")
	reject.addEventListener("click", async (event) => {
		event.preventDefault()
		const email = document.querySelector("#email").innerHTML
		const amount = document.querySelector("#amount").innerHTML
		const narration = document.querySelector("#narration").innerHTML
		const sender = document.querySelector("#sender").innerHTML

		const res = await fetch('/admin-panel/reject-deposit', {
			method: "post",
			body: JSON.stringify({ email, amount, narration, sender }),
			headers: { 'Content-Type': 'application/json' }
		})
		const data = await res.json()
		if(data.ok) {
			notify("success", `${data.message}`)
			closeBtn.click()
			setTimeout(() => {
				location.reload()
			}, 5000)
		} else {
			notify("error", `${data.error}`)
		}
	})
	const ban = document.querySelector("#ban")
	ban.addEventListener("click", async (event) => {
		event.preventDefault()
		const email = document.querySelector("#email").innerHTML

		const res = await fetch('/admin-panel/ban', {
			method: "post",
			body: JSON.stringify({ email }),
			headers: {
				'Content-Type': 'application/json'
			}
		})
		const data = await res.json()
		if(data.ok) {
			notify("success", `${data.message}`)
			closeBtn.click()
			setTimeout(() => {
				location.reload()
			}, 5000)
		} else {
			closeBtn.click()
			notify("error", `${data.error}`)
		}
	})
</script>

</body><grammarly-desktop-integration data-grammarly-shadow-root="true"></grammarly-desktop-integration></html>